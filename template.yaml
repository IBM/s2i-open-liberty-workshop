apiVersion: v1
kind: Template
metadata:
  name: open-liberty-app
  annotations:
    tags: java, web app
    template.openshift.io/provider-display-name: "IBM"
    description: Just building an open liberty app
labels:
  application: open-liberty-app
parameters:
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    value: "https://github.com/IBM/s2i-open-liberty-workshop"
    required: true
  - name: APP_NAME
    description: The name of the application that you would like to build.
    displayName: App name
    value: "authors2"
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: master
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: /web-app
    required: true
  - name: OUTPUT_DIR
    description: The location of the compiled binaries from your open liberty builder
    displayName: Output Directory
    value: /tmp/src/
    required: false
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook.
    displayName: GitHub Webhook Secret
    required: true
    from: '[a-zA-Z0-9]{10}'
    generate: expression
  - name: DOCKER_USERNAME
    description: The docker username used when tagging images
    displayName: Docker username
    required: true
    value: odrodrig
message: "... The GitHub webhook secret is ${GITHUB_WEBHOOK_SECRET} ..."
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: authors-builder
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: authors-runtime
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: s2i-open-liberty-builder
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${DOCKER_USERNAME}/s2i-open-liberty-builder:0.1.0
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: s2i-open-liberty
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${DOCKER_USERNAME}/s2i-open-liberty:0.1.0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: open-liberty-builder
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: authors-builder:0.1.0
    postCommit: {}
    resources: {}
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      contextDir: ${SOURCE_REPOSITORY_DIR}
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: OUTPUT_DIR
            value: ${OUTPUT_DIR}
        from:
          kind: ImageStreamTag
          name: s2i-open-liberty-builder:0.1.0
        incremental: false
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: open-liberty-app
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: authors-runtime:0.1.0
    postCommit: {}
    resources: {}
    source:
      type: Image
      images:
        - from:
            kind: ImageStreamTag
            name: authors-builder:0.1.0
          paths:
            - destinationDir: .
              sourcePath: /tmp/src/
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: s2i-open-liberty:0.1.0
        incremental: false
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - type: ConfigChange
    - type: ImageChange
      imageChange: {}
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: authors-builder:0.1.0
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: ${APP_NAME}
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
      spec:
        containers:
        - image: authors-runtime:0.1.0
          imagePullPolicy: IfNotPresent
          name: authors-runtime
          ports:
          - containerPort: 9080
            name: http
            protocol: TCP
          metadata:
            labels:
              app: ${APP_NAME}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - authors-runtime
          from:
            kind: ImageStreamTag
            name: 'authors-runtime:0.1.0'
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: http
      port: 9080
    selector:
      app: ${APP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    port:
      targetPort: 9080
    to:
      kind: Service
      name: ${APP_NAME}
